const threads = import("xel:threads")
const array   = import("xel:array")

fn fib(n, id) {
    if (id != nil) {
        print("fib(", n, ", ", id, ")")
    } else {
        print("fib(", n, ")")
    }
    if (n <= 1) {
        return n
    }
    return fib(n - 1, id) + fib(n - 2, id)
}

fn spawnNWorkers(n, paramOffset) {
    let workers = []
    let i = 0
    while (i < n) {
        workers = array.push(workers, threads.spawn(fib, i + paramOffset, i))
        i = i + 1
    }
    return workers
}

const WORKERS      = 25
const PARAM_OFFSET = 1

const workers = spawnNWorkers(WORKERS, PARAM_OFFSET)
// threads.killAll()

threads.waitForAll()


let results = []
array.forEach(workers, (fn(worker){
    results = array.push(results, worker.getResult())
}))

print(results)
