const threads = import("xel:threads")
const strings = import("xel:strings")
const array   = import("xel:array")

fn fib(n) {
    print("fib(", n, ")")
    if (n <= 1) {
        return n
    }
    return fib(n - 1) + fib(n - 2)
}

fn spawnNWorkers(n, paramOffset) {
    let workers = []
    let i = 0
    while (i < n) {
        workers = array.push(workers, threads.spawn(fib, i + paramOffset))
        i = i + 1
    }
    return workers
}

const WORKERS      = 10
const PARAM_OFFSET = 0

const workers = spawnNWorkers(WORKERS, PARAM_OFFSET)

threads.waitForAll()

let results = []
array.forEach(workers, (fn(worker){
    results = array.push(results, worker.getResult())
}))

print(results)
